{"ast":null,"code":"var _jsxFileName = \"/home/differentsyntax/GitHub/Safexel/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nconst markerStyle = {\n  height: '50px',\n  width: '50px',\n  marginTop: '-50px'\n};\nconst imgStyle = {\n  height: '100%'\n};\n\nconst Marker = ({\n  title\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: markerStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  style: imgStyle,\n  src: \"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\",\n  alt: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, title)); // class App extends Component {\n//   render() {\n//     return (\n//       <div >\n//         <GoogleMap\n//           style={mapStyles}\n//           bootstrapURLKeys={{ key: 'AIzaSyC1o_fhD9B-B9rOq0rY2-wrMwvUoq4y4jI' }}\n//           center={{ lat: 39.960401, lng: -75.187780 }} \n//           zoom={14}\n//         >\n//           <Marker\n//           title={'Current Location'}\n//           lat={39.960401}\n//           lng={-75.187780}\n//         >\n//           </Marker>\n//         </GoogleMap>\n//       </div>\n//     )\n//   }\n// }\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.notify = () => toast(`Users online : ${Object.keys(this.state.users_online).length}`, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      type: 'info'\n    });\n\n    this.getLocation = () => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.watchPosition(position => {\n          let location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          this.setState((prevState, props) => {\n            let newState = { ...prevState\n            };\n            newState.center = location;\n            newState.locations[`${prevState.current_user}`] = location;\n            return newState;\n          });\n          axios.post(\"http://localhost:3128/update-location\", {\n            username: this.state.current_user,\n            location: location\n          }).then(res => {\n            if (res.status === 200) {\n              console.log(\"new location updated successfully\");\n            }\n          });\n        });\n      } else {\n        alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n      }\n    };\n\n    this.state = {\n      center: {\n        lat: 39.960401,\n        lng: -75.187780\n      },\n      locations: {},\n      users_online: [],\n      current_user: ''\n    };\n  }\n\n  componentDidMount() {\n    let pusher = new Pusher('PUSHER_APP_KEY', {\n      authEndpoint: \"http://localhost:3128/pusher/auth\",\n      cluster: \"mt1\"\n    });\n    this.presenceChannel = pusher.subscribe('presence-channel');\n    this.presenceChannel.bind('pusher:subscription_succeeded', members => {\n      this.setState({\n        users_online: members.members,\n        current_user: members.myID\n      });\n      this.getLocation();\n      this.notify();\n    });\n    this.presenceChannel.bind('location-update', body => {\n      this.setState((prevState, props) => {\n        const newState = { ...prevState\n        };\n        newState.locations[`${body.username}`] = body.location;\n        return newState;\n      });\n    });\n    this.presenceChannel.bind('pusher:member_removed', member => {\n      this.setState((prevState, props) => {\n        const newState = { ...prevState\n        }; // remove member location once they go offline\n\n        delete newState.locations[`${member.id}`]; // delete member from the list of online users\n\n        delete newState.users_online[`${member.id}`];\n        return newState;\n      });\n      this.notify();\n    });\n    this.presenceChannel.bind('pusher:member_added', member => {\n      this.notify();\n    });\n  }\n\n  render() {\n    let locationMarkers = Object.keys(this.state.locations).map((username, id) => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: id,\n        title: `${username === this.state.current_user ? 'My location' : username + \"'s location\"}`,\n        lat: this.state.locations[`${username}`].lat,\n        lng: this.state.locations[`${username}`].lng,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      style: mapStyles,\n      bootstrapURLKeys: {\n        key: 'GOOGLE_MAPS_API_KEY'\n      },\n      center: this.state.center,\n      zoom: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, locationMarkers));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/differentsyntax/GitHub/Safexel/src/App.js"],"names":["React","Component","GoogleMap","axios","Pusher","ToastContainer","toast","mapStyles","width","height","markerStyle","marginTop","imgStyle","Marker","title","App","constructor","props","notify","Object","keys","state","users_online","length","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","type","getLocation","navigator","geolocation","watchPosition","location","lat","coords","latitude","lng","longitude","setState","prevState","newState","center","locations","current_user","post","username","then","res","status","console","log","alert","componentDidMount","pusher","authEndpoint","cluster","presenceChannel","subscribe","bind","members","myID","body","member","id","render","locationMarkers","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n}\n\nconst markerStyle = {\n  height: '50px',\n  width: '50px',\n  marginTop: '-50px'\n}\n\nconst imgStyle = {\n  height: '100%'\n}\n\n\nconst Marker = ({ title }) => (\n  <div style={markerStyle}>\n    <img style={imgStyle} src=\"https://res.cloudinary.com/og-tech/image/upload/s--OpSJXuvZ--/v1545236805/map-marker_hfipes.png\" alt={title} />\n    <h3>{title}</h3>\n  </div>\n);\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div >\n//         <GoogleMap\n//           style={mapStyles}\n//           bootstrapURLKeys={{ key: 'AIzaSyC1o_fhD9B-B9rOq0rY2-wrMwvUoq4y4jI' }}\n//           center={{ lat: 39.960401, lng: -75.187780 }} \n//           zoom={14}\n//         >\n//           <Marker\n//           title={'Current Location'}\n//           lat={39.960401}\n//           lng={-75.187780}\n//         >\n//           </Marker>\n//         </GoogleMap>\n//       </div>\n//     )\n//   }\n// }\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      center: { lat: 39.960401, lng: -75.187780 },\n      locations: {},\n      users_online: [],\n      current_user: ''\n    }\n  }\n  componentDidMount() {\n    let pusher = new Pusher('PUSHER_APP_KEY', {\n      authEndpoint: \"http://localhost:3128/pusher/auth\",\n      cluster: \"mt1\"\n    })\n    this.presenceChannel = pusher.subscribe('presence-channel');\n\n    this.presenceChannel.bind('pusher:subscription_succeeded', members => {\n      this.setState({\n        users_online: members.members,\n        current_user: members.myID\n      });\n      this.getLocation();\n      this.notify();\n    })\n\n    this.presenceChannel.bind('location-update', body => {\n      this.setState((prevState, props) => {\n        const newState = { ...prevState }\n        newState.locations[`${body.username}`] = body.location;\n        return newState;\n      });\n    });\n\n    this.presenceChannel.bind('pusher:member_removed', member => {\n      this.setState((prevState, props) => {\n        const newState = { ...prevState };\n        // remove member location once they go offline\n        delete newState.locations[`${member.id}`];\n        // delete member from the list of online users\n        delete newState.users_online[`${member.id}`];\n        return newState;\n      })\n      this.notify()\n    })\n\n    this.presenceChannel.bind('pusher:member_added', member => {\n      this.notify();\n    })\n  }  \n  notify = () => toast(`Users online : ${Object.keys(this.state.users_online).length}`, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    type: 'info'\n  });\n\n  getLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.watchPosition(position => {\n        let location = { lat: position.coords.latitude, lng: position.coords.longitude };\n        this.setState((prevState, props) => {\n          let newState = { ...prevState };\n          newState.center = location;\n          newState.locations[`${prevState.current_user}`] = location;\n          return newState;\n        });\n        axios.post(\"http://localhost:3128/update-location\", {\n          username: this.state.current_user,\n          location: location\n        }).then(res => {\n          if (res.status === 200) {\n            console.log(\"new location updated successfully\");\n          }\n        });\n      })\n   } else {\n      alert(\"Sorry, geolocation is not available on your device. You need that to use this app\");\n    }\n  }\n  render() {\n    let locationMarkers = Object.keys(this.state.locations).map((username, id) => {\n      return (\n        <Marker\n          key={id}\n          title={`${username === this.state.current_user ? 'My location' : username + \"'s location\"}`}\n          lat={this.state.locations[`${username}`].lat}\n          lng={this.state.locations[`${username}`].lng}\n        >\n        </Marker>\n      );\n    });\n\n    return (\n      <div >\n        <GoogleMap\n          style={mapStyles}\n          bootstrapURLKeys={{ key: 'GOOGLE_MAPS_API_KEY' }}\n          center={this.state.center}\n          zoom={14}\n        >\n          {locationMarkers}\n        </GoogleMap>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}